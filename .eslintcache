[{"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/App.js":"1","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/data/poemsSample.js":"2","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/PoemContainer.js":"3","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/PoemCard.js":"4","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/PoemColumns.js":"5","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/helpers/index.js":"6","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/reportWebVitals.js":"7","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/index.js":"8","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/PoemsView.js":"9","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/AuthorTitle.js":"10","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/CharacterContainer.js":"11","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/Word.js":"12","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/Line.js":"13","/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/PoemText.js":"14"},{"size":4588,"mtime":1609969300889,"results":"15","hashOfConfig":"16"},{"size":66156,"mtime":1609669785834,"results":"17","hashOfConfig":"16"},{"size":831,"mtime":1609838798920,"results":"18","hashOfConfig":"16"},{"size":1423,"mtime":1609758337708,"results":"19","hashOfConfig":"16"},{"size":1020,"mtime":1609758553073,"results":"20","hashOfConfig":"16"},{"size":1060,"mtime":1609758272612,"results":"21","hashOfConfig":"16"},{"size":362,"mtime":1609230777400,"results":"22","hashOfConfig":"16"},{"size":267,"mtime":1609665250526,"results":"23","hashOfConfig":"16"},{"size":553,"mtime":1609969280185,"results":"24","hashOfConfig":"16"},{"size":601,"mtime":1609755442301,"results":"25","hashOfConfig":"16"},{"size":773,"mtime":1609758313361,"results":"26","hashOfConfig":"16"},{"size":840,"mtime":1609758194083,"results":"27","hashOfConfig":"16"},{"size":875,"mtime":1609758570739,"results":"28","hashOfConfig":"16"},{"size":936,"mtime":1609758492748,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"qu8loz",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/App.js",["63"],"import { Fragment, useState } from 'react';\nimport { poems } from './data/poemsSample';\nimport PoemsView from './components/PoemsView';\n\nconst App = () => {\n  const [showFurigana, toggleShowFurigana] = useState(false);\n  const [traditionalJapanese, toggleTraditionalJapanese] = useState(false);\n  const [showRomajiColumn, toggleShowRomajiColumn] = useState(false);\n  const [showEnglishColumn, toggleShowEnglishColumn] = useState(false);\n  const [currentPoem, setCurrentPoem] = useState(0);\n  const [carouselView, toggleCarouselView] = useState(true);\n\n  const handleToggleCarouselView = () => {\n    toggleCarouselView(!carouselView);\n  }\n\n  const handleToggleShowFurigana = () => {\n    toggleShowFurigana(!showFurigana);\n  }\n\n  const handleToggleTraditionalJapanese = () => {\n    toggleTraditionalJapanese(!traditionalJapanese);\n  }\n  \n  const handleToggleShowRomajiColumn = () => {\n    toggleShowRomajiColumn(!showRomajiColumn);\n  }\n\n  const handleToggleShowEnglishColumn = () => {\n    toggleShowEnglishColumn(!showEnglishColumn);\n  }\n\n  const nextPoem = () => {\n    setCurrentPoem((currentPoem + 1) % poems.length);\n}\n\nconst prevPoem = () => {\n    if ((currentPoem - 1) % poems.length === -1) {\n        setCurrentPoem(poems.length - 1);\n        return;\n    }\n    setCurrentPoem(currentPoem - 1);\n}\n// console.log(`current: ${currentPoem}`);\nconsole.log(`carouselView?: ${carouselView}`);\n  return (\n    <div className=\"App\">\n      <nav className=\"site-header\">\n        <section className=\"controls\">\n          <label className=\"controls__label\">\n            Carousel view\n            <div className=\"toggle\">\n              <input\n                type=\"checkbox\"\n                aria-label=\"Carousel view\"\n                id=\"view_carousel_checkbox\"\n                checked={carouselView}\n                onChange={handleToggleCarouselView}\n              />\n              <span className=\"slider round\"></span>\n            </div>\n          </label>\n          <label className=\"controls__label\">\n            Enable Furigana\n            <div className=\"toggle\">\n              <input\n                type=\"checkbox\"\n                aria-label=\"Enable Furigana\"\n                id=\"furigana_checkbox\"\n                checked={showFurigana}\n                onChange={handleToggleShowFurigana}\n              />\n              <span className=\"slider round\"></span>\n            </div>\n          </label>\n          <label className=\"controls__label\">\n            Enable Traditional\n            <div className=\"toggle\">\n              <input\n                type=\"checkbox\"\n                aria-label=\"Enable traditional style\"\n                id=\"traditional_checkbox\"\n                checked={traditionalJapanese}\n                onChange={handleToggleTraditionalJapanese}\n              />\n              <span className=\"slider round\"></span>\n            </div>\n          </label>\n          <label className=\"controls__label\">\n            View English column\n            <div className=\"toggle\">\n              <input\n                type=\"checkbox\"\n                aria-label=\"Enable English column\"\n                id=\"english_checkbox\"\n                checked={showEnglishColumn}\n                onChange={handleToggleShowEnglishColumn}\n              />\n              <span className=\"slider round\"></span>\n            </div>\n          </label>\n          <label className=\"controls__label\">\n            View romaji column\n            <div className=\"toggle\">\n              <input\n                type=\"checkbox\"\n                aria-label=\"Enable romaji column\"\n                id=\"romaji_checkbox\"\n                checked={showRomajiColumn}\n                onChange={handleToggleShowRomajiColumn}\n              />\n              <span className=\"slider round\"></span>\n            </div>\n          </label>\n        </section>\n      </nav>\n      <main className={`poems ${carouselView ? 'poems--carousel' : ''}`}>\n        { <PoemsView\n          poems={poems}\n          traditionalJapanese={traditionalJapanese}\n          showFurigana={showFurigana}\n          showEnglishColumn={showEnglishColumn}\n          showRomajiColumn={showRomajiColumn}\n          carouselView={carouselView}\n          currentPoem={currentPoem}\n        /> }\n      </main>\n      <section className=\"poem-controls\">\n        <button\n          className=\"control control--prev\"\n          onClick={prevPoem}>\n            Previous\n        </button>\n        <button\n          className=\"control control--next\"\n          onClick={nextPoem}>\n            Next\n        </button>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n",["64","65"],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/data/poemsSample.js",[],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/PoemContainer.js",[],["66","67"],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/PoemCard.js",["68"],"import AuthorTitle from './AuthorTitle';\nimport PoemText from './PoemText';\n\nconst PoemCard = ({\n    poem,\n    language,\n    wordCallback,\n    charactersCallback,\n    traditionalJapanese,\n    showFurigana}) => {\n\n    let langAttr = \n    (charactersCallback !== 'romaji' && language !== 'en') ?\n    {'lang': language} : '';\n    \n    let directionAttr = \n    (language === 'ja' && charactersCallback !== 'romaji' && traditionalJapanese) ?\n    {'dir': 'rtl'} : '';\n\n    return (\n        <section\n            {...langAttr}\n            // {...directionAttr}\n            className={\n                `poem__card poem__card--${charactersCallback !== 'romaji' ?\n                `${language}` : 'romaji' } ${(language === 'ja' && charactersCallback !== 'romaji' && traditionalJapanese) ?\n                'poem__card--ja-traditional' : ''}`\n            }\n        >\n            <AuthorTitle\n                poemAuthor={poem.author}\n                language={language}\n                wordCallback={wordCallback}\n                charactersCallback={charactersCallback}\n                showFurigana={showFurigana}\n            />\n            <PoemText\n                poemLines={poem.poem}\n                language={language}\n                wordCallback={wordCallback}\n                charactersCallback={charactersCallback}\n                showFurigana={showFurigana}\n            />\n        </section>\n    )\n}\n\nexport default PoemCard;\n",["69","70"],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/PoemColumns.js",[],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/helpers/index.js",[],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/reportWebVitals.js",[],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/index.js",["71"],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/PoemsView.js",[],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/AuthorTitle.js",[],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/CharacterContainer.js",[],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/Word.js",[],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/Line.js",[],"/Users/sandra/Documents/Work/_web-dev/hundredpoems/src/components/PoemText.js",[],{"ruleId":"72","severity":1,"message":"73","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":18},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"72","severity":1,"message":"82","line":16,"column":9,"nodeType":"74","messageId":"75","endLine":16,"endColumn":22},{"ruleId":"76","replacedBy":"83"},{"ruleId":"78","replacedBy":"84"},{"ruleId":"72","severity":1,"message":"85","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":23},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],"'directionAttr' is assigned a value but never used.",["86"],["87"],"'reportWebVitals' is defined but never used.","no-global-assign","no-unsafe-negation"]